trigger UpdateAccountDescription on Opportunity (after insert, after update) {
    // Step 1: Collect the Account Ids related to the Opportunities
    Set<Id> accountIds = new Set<Id>();
    
    for (Opportunity opp : Trigger.new) {
        if (opp.AccountId != null) {
            accountIds.add(opp.AccountId);
        }
    }
    
    // Step 2: Query for Opportunities related to the accounts, fetching the one with the highest amount
    Map<Id, Opportunity> maxAmountOpportunityMap = new Map<Id, Opportunity>();
    
    for (AggregateResult ar : [
        SELECT AccountId, MAX(Amount) maxAmount
        FROM Opportunity
        WHERE AccountId IN :accountIds
        GROUP BY AccountId
    ]) {
        Id accountId = (Id)ar.get('AccountId');
        Decimal maxAmount = (Decimal)ar.get('maxAmount');
        
        // Query the Opportunity with the highest amount for each Account
        Opportunity highestAmountOpp = [
            SELECT Name, Amount, AccountId
            FROM Opportunity
            WHERE AccountId = :accountId AND Amount = :maxAmount
            LIMIT 1
        ];
        
        maxAmountOpportunityMap.put(accountId, highestAmountOpp);
    }
    
    // Step 3: Prepare a list of Accounts to update their description
    List<Account> accountsToUpdate = new List<Account>();
    
    for (Id accountId : maxAmountOpportunityMap.keySet()) {
        Opportunity opp = maxAmountOpportunityMap.get(accountId);
        
        // Create an Account with updated description
        Account acc = new Account(Id = accountId);
        acc.Description = 'Top Opportunity: ' + opp.Name;
        accountsToUpdate.add(acc);
    }
    
    // Step 4: Update the Accounts
    if (!accountsToUpdate.isEmpty()) {
        update accountsToUpdate;
    }
}
